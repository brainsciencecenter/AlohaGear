#!/bin/bash -x

CmdName=$(basename "$0")
Syntax="${CmdName} [-c config][-n]([-p ProjectId]|[-s SubjectId])[-v][(VerifyAlohaInputs|CompileReport|RunAloha|CalculateAtrophy)]" 

function sys {
	[ -n "${opt_n}${opt_v}" ] && echo "$@" 1>&2
	[ -n "$opt_n" ] || "$@"
}


while getopts c:ns:v arg
do
	case "$arg" in
		c|n|s|v)
			eval "opt_${arg}='${OPTARG:=1}'"
			;;
	esac
done

shift $(("$OPTIND" - 1))

if [ -n "$opt_c" ]
then
	ConfigJsonFile="$opt_c"
else
	ConfigJsonFile="${FLYWHEEL}/config.json"
fi

jq -r . "$ConfigJsonFile"

JobId=$(jq -r '.job.id | select(.)' "$ConfigJsonFile")

InputDir=/flywheel/v0/input
TmpDir=/tmp/aloha

[ -d "$TmpDir" ] || mkdir -p "$TmpDir"

if [ -n "$opt_s" ]
then
	SubjectIds=( $opt_s )
elif [ -n "$opt_p" ]
then
	SubjectIds=( $(sys fwget -1 "$opt_p" | jq -r '.subjects[]._id') )
else
	if ! [ -e "$ConfigJsonFile" ]
	then
		echo "${CmdName} : No Project, Subject Id provided and no config file.  Exiting" 1>&2
		exit 1
	fi		

	SubjectIds=( $(jq -r '.job.id' "$ConfigJsonFile" | fwget -1 -j | jq -r '.parents.subject') )
fi

[ -n "$opt_v" ] && echo "SubjectId = '${SubjectIds[@]}'" 1>&2

AlohaArgs=( -v -u -o stdout,site -d -r -A -j "$JobId")

for i in "$@"
do
	case "$i" in
     	    VerifyAlohaInputs)
		AlohaArgs+=( '-o' 'stdout,site' )
		;;
	    
	    CompileReport)
		;;
	    
	    RunAloha)
		AlohaArgs+=( '-r' '-A' )
		;;
	esac
done

n=0
for SubjectId in "${SubjectIds[@]}"
do
    echo "$SubjectId ${n}/${#SubjectIds[@]}" 1>&2
    sys alohaDriver "${AlohaArgs[@]}" "$SubjectId"
done
