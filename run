#!/bin/bash -x

CmdName=$(basename "$0")
Syntax="${CmdName} [-c config][-i ProjectId|SubjectId][-n][-m extra-large|supersize][-t][-v][(VerifyAlohaInputs|AlohaT1T2TaggingReport|RunAloha|CalculateAtrophy)]" 

function sys {
	[ -n "${opt_n}${opt_v}" ] && echo "$@" 1>&2
	[ -n "$opt_n" ] || "$@"
}


while getopts c:i:m:ntv arg
do
	case "$arg" in
		c|i|m|n|t|v)
			eval "opt_${arg}='${OPTARG:=1}'"
			;;
	esac
done

shift $(("$OPTIND" - 1))

if [ -n "$opt_c" ]
then
	ConfigJsonFile="$opt_c"
else
	ConfigJsonFile="${FLYWHEEL}/config.json"
fi

jq -r . "$ConfigJsonFile"

JobId=$(jq -r '.job.id | select(.)' "$ConfigJsonFile")

InputDir=/flywheel/v0/input
OutputDir=/flywheel/v0/output
TmpDir=/tmp/aloha

[ -d "$TmpDir" ] || mkdir -p "$TmpDir"

if [ -n "$opt_i" ]
then
    ParentCount=$(fwget -1 "$opt_i" | jq -r '.parents[]' | wc -l)
    if [ "$ParentCount" == 0 ]
    then
	echo "${CmdName} : -i '$opt_i' can not be found.  Exiting" 1>&2
	exit 1
    elif [ "$ParentCount" == 1 ]
    then
	SubjectIds=( $(sys fwget -1 -r "$opt_i" | jq -r '.subjects[]._id') )
    elif [ "$ParentCount" == 2 ]
    then
	SubjectIds=( $opt_i )
    else
	echo "${CmdName} : -s '$opt_i' : unknown container type.  Exiting" 1>&2
	exit 1
    fi
else
    if ! [ -e "$ConfigJsonFile" ]
    then
	echo "${CmdName} : No Project, Subject Id provided and no config file.  Exiting" 1>&2
	exit 1
    fi		

    Scope=$(jq -r '.config.Scope | select(.)' "$ConfigJsonFile")
    if [ "$Scope" = 'Subject' ]
    then
	SubjectIds=( $(jq -r '.job.id' "$ConfigJsonFile" | fwget -1 -j | jq -r '.parents.subject') )
    else
	ProjectId=$(jq -r '.job.id' "$ConfigJsonFile" | fwget -1 -j | jq -r '.parents.project')
	SubjectIds=( $(sys fwget -1 -r "$ProjectId" | jq -r '.subjects[]._id') )
    fi
fi

[ -n "$opt_v" ] && echo "SubjectIds = '${SubjectIds[@]}'" 1>&2

#
Stages=( 'VerifyAlohaInputs' )
if [ -n "$1" ]
then
    Stages=( "$@" )
elif [ -s "$ConfigJsonFile" ]
then
    ConfigStages=$(jq -r '.config.Stages | select(.)' "$ConfigJsonFile")
    if [ -n "$ConfigStages" ] && (echo "$ConfigStages" | grep -v -q default)
    then
	Stages=( $(echo "$ConfigStages" | sed 's/, */ /g') )
    fi
fi

AlohaDriverArgs=( '-v' )
[ -n "$opt_j" ] && AlohaDriverArgs+=( -j "$opt_j" )

for i in "${Stages[@]}"
do
	case "$i" in
     	    VerifyAlohaInputs)
		AlohaDriverArgs+=( '-u' '-o' 'stdout,site' )
		;;
	    
	    AlohaT1T2TaggingReport)
		ProjectJsonFile="${TmpDir}/Project.json"
		ReportOutputFile="${OutputDir}/AlohaT1T2TaggingReport.csv"
		fwget -1 -raGz "$ProjectId" > "$ProjectJsonFile"
		alohaReport < /tmp/Project.json | tee "$ReportOutputFile"
		exit 0
		;;
	    
	    RunAloha)
		AlohaDriverArgs+=( '-d' '-r' '-A' )
		;;

	    CalculateAtrophyRates)
		AlohaDriverArgs+=( '-A' )
	esac
done

if [ -n "$opt_m" ]
then
    AlohaDriverArgs+=( '-m' "$opt_m" )
else
    MachineSize=$(jq -r '.config.MachineSize | select(.)' "$ConfigJsonFile")
    AlohaDriverArgs+=( '-m' "$MachineSize" )
fi

if [ -n "$opt_t" ]
then
    AlohaDriverArgs+=( '-t' )
fi

n=1
for SubjectId in "${SubjectIds[@]}"
do
    echo "$SubjectId ${n}/${#SubjectIds[@]}" 1>&2
    sys alohaDriver "${AlohaDriverArgs[@]}" "$SubjectId"
done
