    AlohaArgFlag='"-c"'
    AlohaArgFlagName='"BaselineT2Nifti"'
    SessionJsonFile="$BaselineSessionJsonFile"
    IgnoreJson=IgnoreBaselineT2DicomJson
    RunGear=RunBaselineT2Dcm2NiixGear
    GearTags=
    SessionJasonFile=/tnp/Aloha/BaselineSession.json
    ClassificationMeasurement=T2

    NiftiJson=$(jq -r --argjson AlohaArgFlag "\"$AlohaArgFlag\"" --argjson AlohaArgFlagName "$AlohaArgFlagName" --argjson ClassificationMeasurement "\"$ClassificationMeasurement\"" -f alohaFindT1T2.jq  "$SessionJsonFile" | jq -s -r '[sort_by(.FileTimestamp) | .[] | select( .FileType == "nifti" ) ] | last' )
    if [ -z "$NiftiJson" ] || [ "$NiftiJson" = "null" ] || (echo "$opt_f" | grep -q -E 'IgnoreNiftiJson|RunDcm2NiixGear')
    then
    	DicomJson=$(jq -r --argjson AlohaArgFlag '"-c"' --argjson AlohaArgFlagName "$AlohaArgFlagName" --argjson ClassificationMeasurement '""' -f alohaFindT1.jq  "$SessionJsonFile" | jq -r 'select( (.FileType == "archive") or (.FileType == "dicom") ) ')
	if [ -z "$DicomJson" ] || (echo "$opt_f" | grep -q 'IgnoreDicomJson')
	then
	    echo "${CmdName} : Missing   for ${SessionLabel}(${SessionId}). Skipping" 1>&2
	    NiftiJson='{ "Missing": true }'
	else
	    if [ -z "$opt_f" ] || (echo "$opt_f" | grep -q 'RunDcm2NiixGear')
	    then
		DicomFileId=$(echo "$DicomJson" | jq -r '.FileId')
		Dicom2NiftiJobId=$(sys fwRunGear -w -t "$GearTags" -g dcm2niix -i dcm2niix_input "$DicomFileId")
    		if [ "$?" != 0 ]
    		then
    		    echo "${CmdName} : fwRunGear failed fwRunGear -w -t '$GearTags' -g dcm2niix -i dcm2niix_input '$DicomFileId'" 1>&2
    		    exit 1
    		fi
		
		NiftiFileId=$(fwget -1 -j "$Dicom2NiftiJobId" | jq -r '.outputs[] | select(.type == "nifti") | .file_id')

		DicomTags=$(fwTag "$DicomFileId")

		[ -n "$DicomTags" ] && sys fwTag -q -t "$DicomTags" "$NiftiFileId"
		sys fwget -1 -raGz "$SessionId" > "$SessionJsonFile"
	    else
		DicomFileId=$(echo "$DicomJson" | jq -r .'FileId')
		echo Faking fwRunGear -w -t "$GearTags" -g dcm2niix -i dcm2niix_input "$DicomFileId" 1>&2
	    fi

	    NiftiJson=$(jq -r --argjson AlohaArgFlag '"-c"' --argjson AlohaArgFlagName "$AlohaArgFlagName" --argjson ClassificationMeasurement '""' -f alohaFindT1T2.jq  "$SessionJsonFile" | jq -r 'select( .FileType == "nifti" ) ' | jq -s -r ' sort_by(.FileTimestamp)  | last')
	fi
    fi
    NiftiFileId=$(echo "$NiftiJson" | jq -r '.FileId')

